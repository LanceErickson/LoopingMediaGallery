<Window x:Class="LoopingMediaGallery.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LoopingMediaGallery"
        xmlns:controls="clr-namespace:LoopingMediaGallery.Controls"
        xmlns:converters="clr-namespace:LoopingMediaGallery.Converters"
        mc:Ignorable="d"
        Title="LoopingMediaGallery"
        xmlns:qc="http://QuickConverter.CodePlex.com/"
        Height="400" Width="525" Icon="favicon.ico">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls/AsyncImageStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type Button}">
                <Setter Property="MinWidth" Value="64" />
                <Setter Property="MinHeight" Value="32" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Background" Value="White" />
                <Setter Property="Margin" Value="-1,0,-1,0" />
            </Style>
            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="MinWidth" Value="64" />
                <Setter Property="MinHeight" Value="32" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Background" Value="White" />
                <Setter Property="Margin" Value="-1,0,-1,0" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition Height="85" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Canvas Background="Black" Grid.RowSpan="7" Grid.ColumnSpan="6" />
        <Image Grid.RowSpan="7" Grid.ColumnSpan="6" Stretch="Fill"  Source="{Binding PreviewImage, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ShowPreview, Converter={qc:QuickConverter '$P ? Visibility.Visible : Visibility.Collapsed'}, UpdateSourceTrigger=PropertyChanged}" />
        <ToggleButton Grid.Row="8" Grid.Column="0" Content="{Binding Play, Converter={qc:QuickConverter '$P == false ? \'Play\' : \'Stop\''}}" IsChecked="{Binding Play, UpdateSourceTrigger=PropertyChanged}" />
        <Button Grid.Row="8" Grid.Column="1" Content="Reset" Click="{qc:QuickEvent '$dataContext.ResetHandler()'}" />
        <Button Grid.Row="8" Grid.Column="2" Content="Previous" Click="{qc:QuickEvent '$dataContext.PreviousHandler()'}" />
        <Button Grid.Row="8" Grid.Column="3" Content="Next" Click="{qc:QuickEvent '$dataContext.NextHandler()'}" />
        <ToggleButton Grid.Row="8" Grid.Column="4" Content="{Binding Blank, Converter={qc:QuickConverter '$P == false ? \'Blank\' : \'Show\''}}" IsChecked="{Binding Blank, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Grid.Row="8" Grid.Column="5" Content="Present" Click="{qc:QuickEvent '$dataContext.PresentHandler()'}" />
        <Button Grid.Row="0" Grid.Column="5" Content="Settings" Opacity=".25" Click="{qc:QuickEvent '$dataContext.SettingsHandler()'}" />
        <ToggleButton Grid.Row="6" Grid.Column="5" Opacity=".25" Content="{Binding Mute, Converter={qc:QuickConverter '$P == false ? \'Mute\' : \'Unmute\''}}" IsChecked="{Binding Mute, UpdateSourceTrigger=PropertyChanged}" />
        <ToggleButton Grid.Row="6" Grid.Column="2" Opacity=".25" Content="{Binding ShowTicker, Converter={qc:QuickConverter '$P == false ? \'Show Ticker\' : \'Hide Ticker\''}}" IsChecked="{Binding ShowTicker, UpdateSourceTrigger=PropertyChanged}" />
        <ToggleButton Grid.Row="3" Grid.Column="6" Opacity=".25" Content="{Binding ShowSidebar, Converter={qc:QuickConverter '$P == false ? \'Show Sidebar\' : \'Hide Sidebar\''}}" IsChecked="{Binding ShowSidebar, UpdateSourceTrigger=PropertyChanged}" />
        
        <ListBox Grid.Row="7" Grid.ColumnSpan="6" Background="Black" qc:QuickEvent.P0="{Binding .}" SelectedItem="{Binding CurrentMedia, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" ItemsSource="{Binding MediaCollection, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="{qc:QuickEvent '$dataContext.ItemSelected($sender)'}" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.VirtualizationMode="Recycling">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border Background="Black" Cursor="Hand" MouseDown="{qc:QuickEvent '$P0.SelectMedia($dataContext)'}">
                        <Border VerticalAlignment="Center" BorderThickness="2" BorderBrush="{qc:MultiBinding P0={Binding Path=DataContext.CurrentMedia, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=ListBox}}, P1={Binding .}, ExternalConverter={qc:QuickMultiConverter '$P0 != null ? $P0.Equals($P1) ? $V0 : $V1 : $V1', V0={x:Static Brushes.Red}, V1={x:Static Brushes.White}}}" Padding="1">
                            <controls:AsyncImage Height="50" Width="50" UriSource="{qc:MultiBinding P1={Binding Source}, P2={Binding Type}, ExternalConverter={x:Static converters:UriToUriConverter.Instance}}" />
                        </Border>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
